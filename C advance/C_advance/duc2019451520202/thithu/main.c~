#include<stdio.h>
#include "DirectedGraph.h"

int main(){
  int x, m, n, i, v1, v2;
  double weight;
  Graph G = createGraph();
  JRB node1, node2, node;
  FILE *fin;
  do{
    printf("1. Doc ban do thanh tri.\n"
	   "2. In ra danh sach ke moi thanh tri.\n"
	   "3. Dua ra danh sach thanh tri theo yeu cau.\n"
	   "4. Tim duong di ngan nhat.\n"
	   "5. Tim duong di bo ngan nhat.\n"
	   "6. thoat\n"
	   "Ban chon? ");
    scanf("%d", &x);
    switch(x){
    case 1:
      fin = fopen("dothi.txt", "r+");
      if(fin == NULL){
	printf("Khong the moi file.\n");
	return 1;
      }
      fscanf(fin, "%d%d", &m, &n);
      for(i = 0;i<n;i++){
	fscanf(fin, "%d%d%lf", &v1, &v2, &weight);
	//printf("%d\t%d\t%lf\n", v1, v2, weight);
	addVertex(G, v1, "1");
	addVertex(G, v2, "1");
	//printf("%d %d\n", v1, v2);
	addEdge(G, v1, v2, weight);
	addEdge(G, v2, v1, weight);
      }
      jrb_traverse(node1, G.edges){
	printf("%d ", (int)jval_i(node1->val));
      }
      printf("%.2lf\n", getEdgeValue(G, 1, 2));
      printf("%.2lf\n", getEdgeValue(G, 2, 1));
      printf("\n");
	/*jrb_traverse(node1, G.edges){
	printf("%d ", jval_i(node1->key));
	jrb_traverse(node2, G.vertices){
	  node = jrb_find_int(node1, jval_i(node2->key));
	  if(!node) printf("0 ");
	  else{
	    printf("%lf ", getEdgeValue(G, jval_i(node1->val), jval_i(node2->val)));
	  }
	}
	printf("\n");
	}*/
      
      break;
    case 2: break;
    case 3: break;
    case 4: break;
    case 5: break;
    case 6: break;
    default: break;
    }
  }while(x != 6);
  dropGraph(G);
  return 0;
}
